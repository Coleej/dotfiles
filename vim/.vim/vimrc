" Configuration file for vim

set shell=bash

" vim-plug section "
call plug#begin('~/.vim/plugged')

  Plug 'vim-airline/vim-airline'
  Plug 'vim-airline/vim-airline-themes'
  Plug 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle' }
  Plug 'lervag/vimtex'
  Plug 'Konfekt/FastFold'
  Plug 'vimwiki/vimwiki'
  Plug 'mattn/calendar-vim'
  Plug 'blindFS/vim-taskwarrior'
  Plug 'movitto/vim-vsearch'
  Plug 'breuckelen/vim-resize'
  Plug 'Townk/vim-autoclose'
  Plug 'jszakmeister/vim-togglecursor'
  Plug 'KabbAmine/vullScreen.vim'
  Plug 'guns/xterm-color-table.vim'
  Plug 'dag/vim-fish'
  Plug 'xolox/vim-session'
  Plug 'xolox/vim-misc'
  Plug 'tpope/vim-fugitive'
  Plug 'Xuyuanp/nerdtree-git-plugin'

  " C plugins
  Plug 'vim-syntastic/syntastic'
  
  " python plugins
  Plug 'davidhalter/jedi-vim'
  Plug 'jmcantrell/vim-virtualenv'
  Plug 'nvie/vim-flake8'

call plug#end()

" ########## "
" vim config "
" ########## "
set foldmethod=syntax
set belloff=all
set nu
set wrap linebreak
set grepprg=grep\ -nH\ $ "Set grep to always print file-names*
set autoindent
filetype plugin on
syntax on
noh

" Turn off menu/tool bar and Set gui font
if has("gui_running")
  set guioptions -=m
  set guioptions -=T
  set guifont=Monospace\ 12
  set guioptions -=r
  set guioptions -=L
  set guioptions -=b
endif

"  abbreviations "
:iabbrev adn and
:iabbrev waht what
:iabbrev tehn then
:iabbrev @@1 codyjohnson144@gmail.com
:iabbrev @@2 cjoh296@lsu.edu


" Plugin configurations

" vim-airline "
" ----------- "
let g:airline#extensions#tabline#enabled = 1
let g:airline_theme='luna'

" jedi-vim "
" -------- "

" syntastic "
" --------- "
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

" Vim-session "
" ----------- "
nnoremap <leader>S :SaveSession 
nnoremap <leader>O :OpenSession 
let g:session_autoload = 'no'
let g:session_autosave = 'no'

" NERDTree "
" -------- "
let g:NERDTreeWinSize = 52

au bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

" function to open NERDTree depending on filetype
au vimenter * call s:CheckToOpenNERDTree()

function! s:CheckToOpenNERDTree() abort

	" Open for python
	if &filetype == 'python'
		NERDTree
	endif

	" Open for c
	if &filetype == 'c'
		NERDTree
	endif

endfunction

" vimwiki "
" ------- "
let g:vimwiki_list = [{'path': '~/.vimwiki',
       \ 'path_html': '~/.vimwiki/html',
       \ 'template_path': '~/.vimwiki/templates/',
       \ 'template_default': 'def_template',
       \ 'template_ext': '.html'}]

" template macros
" literature review notes
nnoremap <leader>tl i= Synopsis = <cr><cr><cr>= Conclusions =<cr><cr><cr>= Criticisms =<cr><cr><cr>= Notes =<cr>* 

" meetings
nnoremap <leader>tm i= File = <cr>[[file:~/Documents/05_meetings/10_research_group/2018-/draft.odp]]<cr>[[file:~/Documents/05_meetings/10_research_group/2017-/report.pdf]]<cr><cr>= Notes =<cr>* <cr><cr>= TODO =<cr>1. [ ] <esc>kkka

" vimtex "
" ------ "
let g:tex_flavor = 'pdflatex'
let g:vimtex_view_method = 'mupdf' 


" generic key mappings "
"######################"
let mapleader = "\\"
let maplocalleader = "`"

" miscellaneous 
nnoremap <leader>L :set list!<CR>
setlocal nolist
set listchars=tab:▶\ ,eol:¬

" Toggles
nnoremap <leader>N :NERDTreeToggle<CR>
nnoremap <leader>n :set hlsearch!<CR>
nnoremap <leader>nn :set nu!<CR>
nnoremap <localleader>cal :Calendar<CR>
nnoremap <leader>sp :set spell!
nnoremap <localleader>lh <plug>(vimtex-compile-ss)
nnoremap <localleader>la <plug>(vimtex-lacheck)

" Cycle buffers
nnoremap <leader><Tab> :bnext!<CR>
nnoremap <leader><S-Tab> :bprevious!<CR>

" Change windows
nmap <silent> <C-h> :wincmd h<CR>
nmap <silent> <C-k> :wincmd k<CR>
nmap <silent> <C-j> :wincmd j<CR>
nmap <silent> <C-l> :wincmd l<CR>

" disable arrow keys
noremap <Left> <nop>
noremap <Up> <nop>
noremap <Down> <nop>
noremap <Right> <nop>

" map escape 
inoremap jk <esc>l
inoremap <esc> <nop>
vnoremap jk <esc>
vnoremap <esc> <nop>

" move cursor to beginning and end of line
noremap H 0
noremap L $

" page-up and page-down
nnoremap J <c-f>
nnoremap K <c-b>

" wrap quotes around current word
vnoremap <leader>" iw<esc>`<i"<esc>`> a"
vnoremap <leader>' iw<esc>`<i'<esc>`> a'
nnoremap <leader>" viw<esc>a"<esc>hbi"<esc>lel
nnoremap <leader>' viw<esc>a'<esc>hbi'<esc>lel

" move line of text up a line
noremap _ d$k<S-p>0

" move line of text down a line
noremap - d$ p0

" Capitalize word under cursor in insert-mode
inoremap <C-u> <esc> viw<S-u>
nnoremap <C-u> viw<S-u>

" Open split to edit vimrc
nnoremap <leader>ev :vsplit $MYVIMRC<cr>

" Source vimrc
nnoremap <leader>sv :source $MYVIMRC<cr> :echo "vimrc sourced"<cr>

" Coding bindings
onoremap p i(
onoremap in( :<c-u>normal! f(vi(<cr>
onoremap il( :<c-u>normal! F)vi(<cr>
onoremap b /return<cr>

" Operator Mappings"
:onoremap in( :<c-u>normal! f(vi(<cr>
:onoremap il( :<c-u>normal! F)vi(<cr>

" Plugin mappings "
" ----------------"
" fugitive "
" -------- "
nnoremap <leader>gc :Gcommit -a<cr>
nnoremap <leader>gs :Gstatus<cr>
nnoremap <leader>gp :Gpush<cr>
" ----------"
" syntastic "
" --------- "
nnoremap <leader>sc :SyntasticCheck<cr>


"###################"
" Filetype settings "
"###################"

if has("autocmd")
  " Enable file type detection
  filetype on 

  " Python
  :augroup filetype_python
    :autocmd!
    :au FileType python nnoremap <buffer> <localleader>c I#<space><esc>
    ":au BufWritePost *.py call Flake8()
    :au FileType python let g:jedi#documentation_command = "U"
  :augroup END

  
  
  " (ba)sh
  :augroup filetype_sh
    :autocmd!
    :au FileType sh nnoremap <buffer> <localleader>c I#<space><esc>
    :au FileType sh set tabstop=2
    :au FileType sh set sw=2
  :augroup END

  
  
  " Latex
  :augroup filetype_latex
    :autocmd!
    :au FileType tex let g:vimtex_quickfix_open_on_warning=0
    :au FileType tex setlocal spell spelllang=en_us
  :augroup END
  
  
  
  " C
  :augroup filetype_c
    :autocmd!
    :au FileType c nnoremap <buffer> <localleader>c I//<esc>
    :au FileType c setlocal ts=2 sts=2 sw=2 expandtab
  :augroup END

  
  
  " txt
  :augroup filetype_txt
    :autocmd! 
    :au FileType txt setlocal spell
    :au FileType txt setlocal nolist
    :au FileType txt setlocal nonu
  :augroup END

  " wiki
  :augroup filetype_vimwiki
    :autocmd!

    " options
    :au FileType vimwiki let g:vimwiki_folding='expr'
    :au FileType vimwiki setlocal spell spelllang=en_us
    :au FileType vimwiki let b:autopairs_enabled=0
    :au FileType vimwiki setlocal sw=3
    :au FileType vimwiki setlocal ts=3
    :au FileType vimwiki setlocal nolist
    :au FileType vimwiki setlocal nonu

    " type settings mappings
    :au FileType vimwiki noremap <buffer> <localleader>R :VimwikiRenameLink<CR>
    :au FileType vimwiki noremap <buffer> <localleader>b bi*<esc>ea*<esc>e
    :au FileType vimwiki noremap <buffer> <localleader>i bi_<esc>ea_<esc>e

    " plugin function mappings
    :au FileType vimwiki noremap <buffer> <leader>sw :VimwikiSplitLink<CR>
    :au FileType vimwiki noremap <buffer> <leader>t :VimwikiTabnewLink<CR>
    :au FileType vimwiki noremap <buffer> <leader>8 :VimwikiChangeSymbolTo *<CR>
    :au FileType vimwiki noremap <buffer> <leader>* :VimwikiChangeSymbolInListTo *<CR>
    :au FileType vimwiki noremap <buffer> <leader>_ :VimwikiChangeSymbolTo -<CR>
    :au FileType vimwiki noremap <buffer> <leader>- :VimwikiChangeSymbolInListTo -<CR>
    :au FileType vimwiki noremap <buffer> <leader>3 :VimwikiChangeSymbolTo #<CR>
    :au FileType vimwiki noremap <buffer> <leader># :VimwikiChangeSymbolInListTo #<CR>
  :augroup END

  " html
  :augroup filetype_html
    :autocmd!
    :au BufWritePre *.html :normal gg=G
    :au FileType html setlocal sw=3
    :au FileType html setlocal ts=3
  :augroup END

  " fish
  :augroup filetype_fish
    :autocmd!
    :au FileType fish setlocal ts=2
    :au FileType fish setlocal sw=2
    :au FileType fish setlocal expandtab
  :augroup END

endif



"##########"
" Digraphs "
"##########"
" subscripts "
execute "digraphs kb " . 0x2096 
execute "digraphs ab " . 0x2090
execute "digraphs eb " . 0x2091
execute "digraphs hb " . 0x2095
execute "digraphs ib " . 0x1D62
execute "digraphs kb " . 0x2096
execute "digraphs lb " . 0x2097
execute "digraphs mb " . 0x2098
execute "digraphs nb " . 0x2099
execute "digraphs ob " . 0x2092
execute "digraphs pb " . 0x209A
execute "digraphs rb " . 0x1D63
execute "digraphs sb " . 0x209B
execute "digraphs tb " . 0x209C
execute "digraphs ub " . 0x1D64
execute "digraphs vb " . 0x1D65
execute "digraphs xb " . 0x2093



"##############"
" Color Scheme "
"##############"
"
colorscheme desert

" Invisible Character Color
highlight NonText guifg=#4d4c42 guibg=bg
highlight SpecialKey guifg=#4d4c42

" pylint
hi Search ctermfg=white ctermbg=blue

" Vimwiki
:hi VimwikiHeader1 ctermfg=2
:hi VimwikiHeader2 ctermfg=4
:hi VimwikiHeader3 ctermfg=11
:hi VimwikiHeader4 ctermfg=6
:hi VimwikiHeader5 ctermfg=7
:hi VimwikiHeader6 ctermfg=1
